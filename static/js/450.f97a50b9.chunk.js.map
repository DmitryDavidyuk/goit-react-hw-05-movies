{"version":3,"file":"static/js/450.f97a50b9.chunk.js","mappings":"2LAGMA,EAAM,mC,aASZ,O,oBAAA,WAAgCC,GAAhC,2FAEUC,EAAS,CACbC,IAAI,qBACJC,OAAQ,CAAEH,KAAAA,IAJhB,SAM2BI,IAAMH,EAAQD,GANzC,uBAMYK,EANZ,EAMYA,KANZ,kBAOWA,GAPX,uCASIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAThC,kBAUW,MAVX,gF,aAeA,O,oBAAA,WAA+BC,GAA/B,2FAEUR,EAAS,CACbC,IAAI,SAAD,OAAWO,IAHpB,SAK2BL,IAAMH,EAAQQ,GALzC,uBAKYJ,EALZ,EAKYA,KALZ,kBAMWA,GANX,uCAQIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARhC,kBASW,MATX,gFAceE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,2FAEUV,EAAS,CACbC,IAAI,wBAAD,OAA0BH,GAC7BI,OAAQQ,GAJd,SAM2BP,IAAMH,EAAQU,GANzC,uBAMYN,EANZ,EAMYA,KANZ,kBAOWA,GAPX,uCASIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAThC,kBAUW,MAVX,gFAceI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BH,GAA3B,2FAEUR,EAAS,CACbC,IAAI,SAAD,OAAWO,EAAX,aAHT,SAK2BL,IAAMH,EAAQQ,GALzC,uBAKYJ,EALZ,EAKYA,KALZ,kBAMWA,EAAKQ,MANhB,uCAQIP,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARhC,kBASW,MATX,gFAaeM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BL,GAA9B,2FAEUR,EAAS,CACbC,IAAI,SAAD,OAAWO,EAAX,aAHT,SAK2BL,IAAMH,EAAQQ,GALzC,uBAKYJ,EALZ,EAKYA,KALZ,kBAMWA,EAAKU,SANhB,uCAQIT,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARhC,kBASW,MATX,gFA/DAJ,IAAAA,SAAAA,QAHiB,gCAIjBA,IAAAA,SAAAA,OAAwB,CACtBY,QAASjB,EACTkB,SAAU,SAyEZ,IAAMC,EAAc,CAClBC,iB,SAtE8B,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAuEbC,gBAvEF,SAe+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyDbV,eAzDF,SAc8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA4CbE,YA5CF,SAc2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA+BbE,eA/BF,SAa8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAqBf,K,iICvFe,SAASO,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOZ,EAAP,KAAca,EAAd,KAgBA,OACE,kBAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBACmB,KAAjBhB,EAAMiB,QAIVN,EAASX,GACTa,EAAS,KAJPK,MAAM,0BAKT,EAGC,WACE,kBACEP,SAjBoB,SAAAI,GACxBF,EAASE,EAAEI,cAAcC,MAAMC,cAChC,EAgBKC,KAAK,OACLF,MAAOpB,EACPuB,YAAY,yBAEd,mBAAQD,KAAK,SAAb,sBAGL,CCzBc,SAASE,IAAU,IAAD,EAC/B,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM7B,EAAK,UAAG4B,EAAaE,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHjC,GACLO,EAAAA,EAAAA,eACkBqB,GACfM,MAAK,gBAAG9B,EAAH,EAAGA,QAAH,OAAiBsB,EAAUtB,EAA3B,IACL+B,OAAM,SAAAtC,GAAK,OAAIF,QAAQC,IAAIC,EAAhB,GACf,GAAE,CAACG,EAAO4B,IAOX,OACE,iCACE,SAAClB,EAAD,CAAWC,SAPW,SAAAX,GAExB6B,EAD4B,KAAV7B,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,KAKG,wBACGyB,EAAOW,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMvC,IAAMyC,MAAO,CAAEC,KAAMT,GAAhD,SACGM,EAAMI,SAFFJ,EAAMvC,GADA,QAUxB,C","sources":["API/API.jsx","components/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0eaaf2516690b5ff52877c678f040000';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n//Список самых популярных фильмов на сегодня\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: { page },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Запрос полной информации о фильме\nasync function getMovieDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Поиск фильмов по запросу\nasync function getSearchMovie(query) {\n  try {\n    const config = {\n      url: `search/movie?api_key=${KEY}`,\n      params: query,\n    };\n    const { data } = await axios(config, query);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiServices = {\n  getPopularMovies,\n  getMovieDetails,\n  getSearchMovie,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiServices;\n","import { useState } from 'react';\n\nexport default function SearchBar({ onChange }) {\n  const [query, setQuery] = useState('');\n\n  const handleChangeQuery = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      alert('Please enter your query');\n      return;\n    }\n    onChange(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        onChange={handleChangeQuery}\n        type=\"text\"\n        value={query}\n        placeholder=\"Enter movie name...\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n","import { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport apiServices from '../API/API';\nimport SearchBar from 'components/SearchBar';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n    apiServices\n      .getSearchMovie(searchParams)\n      .then(({ results }) => setMovies(results))\n      .catch(error => console.log(error));\n  }, [query, searchParams]);\n\n  const updateQueryString = query => {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams(nextQuery);\n  };\n\n  return (\n    <>\n      <SearchBar onChange={updateQueryString} />\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["KEY","page","config","url","params","axios","data","console","log","error","id","getSearchMovie","query","getCastInfo","cast","getMovieReview","results","api_key","language","apiServices","getPopularMovies","getMovieDetails","SearchBar","onChange","useState","setQuery","onSubmit","e","preventDefault","trim","alert","currentTarget","value","toLowerCase","type","placeholder","Movies","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","then","catch","map","movie","to","state","from","title"],"sourceRoot":""}