{"version":3,"file":"static/js/135.05775c71.chunk.js","mappings":"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","sources":["API/API.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0eaaf2516690b5ff52877c678f040000';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n//Список самых популярных фильмов на сегодня\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: { page },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Запрос полной информации о фильме\nasync function getMovieDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Поиск фильмов по запросу\nasync function getSearchMovie(query) {\n  try {\n    const config = {\n      url: `search/movie?api_key=${KEY}`,\n      params: query,\n    };\n    const { data } = await axios(config, query);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiServices = {\n  getPopularMovies,\n  getMovieDetails,\n  getSearchMovie,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiServices;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"goBack\":\"MovieDetails_goBack__C8OKE\",\"moviesDetailsContainer\":\"MovieDetails_moviesDetailsContainer__dxxs+\",\"poster\":\"MovieDetails_poster__yO7gD\",\"about\":\"MovieDetails_about__8ZMko\",\"about_links\":\"MovieDetails_about_links__0OH-z\"};","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport apiServices from 'API/API';\nimport CSS from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setStatus('idle');\n    apiServices\n      .getMovieDetails(movieId)\n      .then(data => {\n        setMovie(data);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'idle' && <h2>Loading...</h2>}\n      {status === 'rejected'}\n      {status === 'resolved' && (\n        <>\n          <Link className={CSS.goBack} to={backLinkHref}>\n            Go back\n          </Link>\n          <div className={CSS.moviesDetailsContainer}>\n            <div className={CSS.poster}>\n              {movie.poster_path && (\n                <>\n                  <img\n                    width=\"250\"\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    alt={movie.title}\n                  />\n                </>\n              )}\n            </div>\n            <div className={CSS.about}>\n              <h1>{movie.title}</h1>\n              <p>User score: {Math.trunc(movie.vote_average * 10)}%</p>\n              <h3>Owerviev</h3>\n              <p>{movie.overview}</p>\n              {movie.genres && (\n                <>\n                  <h3>Genres</h3>\n                  <ul>\n                    {movie.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </div>\n          </div>\n          <div className={CSS.about_links}>\n            <Link to=\"cast\">Cast</Link> <Link to=\"reviews\">Revies</Link>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["KEY","page","config","url","params","axios","data","console","log","error","id","getSearchMovie","query","getCastInfo","cast","getMovieReview","results","api_key","language","apiServices","getPopularMovies","getMovieDetails","MovieDetails","useState","movie","setMovie","movieId","useParams","status","setStatus","backLinkHref","useLocation","state","from","useEffect","then","catch","className","CSS","to","poster_path","width","src","alt","title","Math","trunc","vote_average","overview","genres","map","genre","name"],"sourceRoot":""}