{"version":3,"file":"static/js/459.c2612162.chunk.js","mappings":"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","sources":["API/API.jsx","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0eaaf2516690b5ff52877c678f040000';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n//Список самых популярных фильмов на сегодня\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: { page },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Запрос полной информации о фильме\nasync function getMovieDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Поиск фильмов по запросу\nasync function getSearchMovie(query) {\n  try {\n    const config = {\n      url: `search/movie?api_key=${KEY}`,\n      params: query,\n    };\n    const { data } = await axios(config, query);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiServices = {\n  getPopularMovies,\n  getMovieDetails,\n  getSearchMovie,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiServices;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__YOhg9\",\"card\":\"Cast_card__ud29m\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport apiServices from 'API/API';\nimport imgNotFound from '../../img/profile_picture_user_icon_153847.png';\nimport CSS from './Cast.module.css';\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n    apiServices\n      .getCastInfo(movieId)\n      .then(cast => {\n        if (cast.length === 0) {\n          return;\n        }\n        setActors(cast);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        console.log(error);\n        setStatus('rejected');\n      });\n  }, [movieId, setStatus]);\n\n  return (\n    <>\n      {status === 'pending' && <h2>Loading...</h2>}\n      {status === 'rejected' && <h2>not found</h2>}\n      {status === 'resolved' && (\n        <ul className={CSS.cast}>\n          {actors.map(actor => (\n            <li className={CSS.card} key={actor.id}>\n              <img\n                width=\"150\"\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : imgNotFound\n                }\n                alt={actor.original_name}\n              />\n              <h4>{actor.original_name}</h4>\n              <p>{actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["KEY","page","config","url","params","axios","data","console","log","error","id","getSearchMovie","query","getCastInfo","cast","getMovieReview","results","api_key","language","apiServices","getPopularMovies","getMovieDetails","Cast","movieId","useParams","useState","actors","setActors","status","setStatus","useEffect","then","length","catch","className","CSS","map","actor","width","src","profile_path","imgNotFound","alt","original_name","character"],"sourceRoot":""}