{"version":3,"file":"static/js/415.e7d85357.chunk.js","mappings":"2LAGMA,EAAM,mC,aASZ,O,oBAAA,WAAgCC,GAAhC,2FAEUC,EAAS,CACbC,IAAI,qBACJC,OAAQ,CAAEH,KAAAA,IAJhB,SAM2BI,IAAMH,EAAQD,GANzC,uBAMYK,EANZ,EAMYA,KANZ,kBAOWA,GAPX,uCASIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAThC,kBAUW,MAVX,gF,aAeA,O,oBAAA,WAA+BC,GAA/B,2FAEUR,EAAS,CACbC,IAAI,SAAD,OAAWO,IAHpB,SAK2BL,IAAMH,EAAQQ,GALzC,uBAKYJ,EALZ,EAKYA,KALZ,kBAMWA,GANX,uCAQIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARhC,kBASW,MATX,gFAceE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BC,GAA9B,2FAEUV,EAAS,CACbC,IAAI,wBAAD,OAA0BH,GAC7BI,OAAQQ,GAJd,SAM2BP,IAAMH,EAAQU,GANzC,uBAMYN,EANZ,EAMYA,KANZ,kBAOWA,GAPX,uCASIC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAThC,kBAUW,MAVX,gFAceI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BH,GAA3B,2FAEUR,EAAS,CACbC,IAAI,SAAD,OAAWO,EAAX,aAHT,SAK2BL,IAAMH,EAAQQ,GALzC,uBAKYJ,EALZ,EAKYA,KALZ,kBAMWA,EAAKQ,MANhB,uCAQIP,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARhC,kBASW,MATX,gFAaeM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BL,GAA9B,2FAEUR,EAAS,CACbC,IAAI,SAAD,OAAWO,EAAX,aAHT,SAK2BL,IAAMH,EAAQQ,GALzC,uBAKYJ,EALZ,EAKYA,KALZ,kBAMWA,EAAKU,SANhB,uCAQIT,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARhC,kBASW,MATX,gFA/DAJ,IAAAA,SAAAA,QAHiB,gCAIjBA,IAAAA,SAAAA,OAAwB,CACtBY,QAASjB,EACTkB,SAAU,SAyEZ,IAAMC,EAAc,CAClBC,iB,SAtE8B,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAuEbC,gBAvEF,SAe+B,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyDbV,eAzDF,SAc8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA4CbE,YA5CF,SAc2B,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA+BbE,eA/BF,SAa8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAqBf,K,iICrFe,SAASO,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACRT,EAAAA,EAAAA,mBAA+BU,MAAK,YAAkB,IAAfb,EAAc,EAAdA,QACrCS,EAAUT,EACX,GACF,GAAE,KAGD,iCACE,4CACA,wBACGQ,EAAOM,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMrB,IAAMuB,MAAO,CAAEC,KAAMR,GAAhD,SACGK,EAAMI,SAFFJ,EAAMrB,GADA,QAUxB,C","sources":["API/API.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '0eaaf2516690b5ff52877c678f040000';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: KEY,\n  language: 'en-US',\n};\n\n//Список самых популярных фильмов на сегодня\nasync function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: { page },\n    };\n    const { data } = await axios(config, page);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Запрос полной информации о фильме\nasync function getMovieDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config, id);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\n//Поиск фильмов по запросу\nasync function getSearchMovie(query) {\n  try {\n    const config = {\n      url: `search/movie?api_key=${KEY}`,\n      params: query,\n    };\n    const { data } = await axios(config, query);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config, id);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nasync function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const { data } = await axios(config, id);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nconst apiServices = {\n  getPopularMovies,\n  getMovieDetails,\n  getSearchMovie,\n  getCastInfo,\n  getMovieReview,\n};\n\nexport default apiServices;\n","import { Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport apiServices from 'API/API';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    apiServices.getPopularMovies().then(({ results }) => {\n      setMovies(results);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["KEY","page","config","url","params","axios","data","console","log","error","id","getSearchMovie","query","getCastInfo","cast","getMovieReview","results","api_key","language","apiServices","getPopularMovies","getMovieDetails","Home","useState","movies","setMovies","location","useLocation","useEffect","then","map","movie","to","state","from","title"],"sourceRoot":""}